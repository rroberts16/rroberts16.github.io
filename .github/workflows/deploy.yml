name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch (usually 'main' or 'master')
  push:
    branches:
      - main # Adjust if your default branch is different
  # Allows you to run this workflow manually from the Actions tab on GitHub
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      # Use a recent Hugo version (check latest on Hugo's GitHub releases)
      # Extended version is often recommended for theme compatibility
      HUGO_VERSION: 0.125.5
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      # Optional: If your theme requires Dart Sass for CSS processing, uncomment the next 3 lines
      # - name: Install Dart Sass
      #   run: sudo snap install dart-sass
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive  # Fetch themes added as Git submodules

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      # Optional: If your site uses Node.js for things like PostCSS, uncomment the next 2 lines
      # - name: Install Node.js dependencies
      #   run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      - name: Build with Hugo
        env:
          # Set environment variables for Hugo build
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
          # The action automatically determines the baseURL needed for deployment
          # Ensure your hugo.toml baseURL is correct for local testing & as a fallback
        run: |
          hugo --gc --minify --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the 'public' directory Hugo generated
          path: './public'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }} # Gets the URL of the deployed site
    runs-on: ubuntu-latest
    needs: build # Runs only after the build job succeeds
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # Standard action to deploy the artifact